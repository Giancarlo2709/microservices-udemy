======================== config-server

.\mvnw clean package
 
docker build -t config-server:v1 .
docker network create spring-microservicios
docker run -p 8888:8888 --name config-server --network springcloud config-server:v1


======================== servicio-eureka-server

.\mvnw clean package
 
docker build -t servicio-eureka-server:v1 .
docker run -p 8761:8761 --name servicio-eureka-server --network springcloud servicio-eureka-server:v1
======================== mysql

docker pull mysql:8
docker run -p 3306:3306 --name microservicios-mysql8 --network springcloud -e MYSQL_ROOT_PASSWORD=sasa -e MYSQL_DATABASE=db_springboot_cloud -d mysql:8
docker logs -f microservicios-mysql8


======================== postgresql

docker pull postgres:12-alpine
docker run -p 5432:5432 --name microservicios-postgres12 --network springcloud -e POSTGRES_PASSWORD=sasa -e POSTGRES_DB=db_springboot_cloud -d postgres:12-alpine
docker logs -f microservicios-postgres12


======================== springboot-servicio-productos

.\mvnw clean package -DskipTests
 
docker build -t servicio-productos:v1 .
docker run -P --network springcloud servicio-productos:v1


======================== springboot-servicio-zuul-server

.\mvnw clean package -DskipTests
 
docker build -t servicio-zuul-server:v1 .
docker run -p 8090:8090 --network springcloud servicio-zuul-server:v1


======================== springboot-servicio-usuarios

.\mvnw clean package -DskipTests
 
docker build -t servicio-usuarios:v1 .
docker run -P --network springcloud servicio-usuarios:v1


======================== springboot-servicio-oauth

.\mvnw clean package -DskipTests
 
docker build -t servicio-oauth:v1 .
docker run -p 9100:9100 --network springcloud servicio-oauth:v1


======================== springboot-servicio-item

.\mvnw clean package -DskipTests
 
docker build -t servicio-items:v1 .
docker run -p 8002:8002 -p 8005:8005 -p 8007:8007 --network springcloud servicio-items:v1


======================== rabbitmq

docker pull rabbitmq:3.8-management-alpine
docker run -p 15672:15672 -p 5672:5672 --name microservicios-rabbitmq38 --network springcloud -d rabbitmq:3.8-management-alpine
 
docker logs -f microservicios-rabbitmq38


======================== zipkin

docker build -t zipkin-server:v1 .
docker run -p 9411:9411 --name zipkin-server --network springcloud -e RABBIT_ADDRESSES=microservicios-rabbitmq38:5672 -e STORAGE_TYPE=mysql -e MYSQL_USER=zipkin -e MYSQL_PASS=zipkin -e MYSQL_HOST=microservicios-mysql8 zipkin-server:v1
docker logs -f zipkin-server


======================== Otros comandos

detener y eliminar todos los contenedores:

docker stop $(docker ps -q)
docker rm $(docker ps -a -q)


eliminar todas las imagenes:

docker rmi $(docker images -a -q)