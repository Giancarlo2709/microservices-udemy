resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 6
        failure-rate-threshold: 50
        wait-duration-in-open-state: 20s
        permitted-number-of-calls-in-half-open-state: 4
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
    instances:
      products:
        base-config: default
  timelimiter:
    configs:
      default:
        timeout-duration: 2s
    instances:
      products:
        base-config: default


spring:
  application:
    name: service-gateway-server
  config:
    import: "optional:configserver:"
  cloud:
    gateway:
      routes:
      - id: service-users
        uri: lb://service-users
        predicates:
        - Path=/api/users/**
        filters:
          - StripPrefix=2
      - id: services-oauth
        uri: lb://services-oauth
        predicates:
        - Path=/api/security/**
        filters:
          - StripPrefix=2
          #- RemoveResponseHeader=X-Response-Foo
      - id: service-products
        uri: lb://service-products
        predicates:
        - Path=/api/products/**
        #- Header=token,\d+
        #- Header=Content-Type,application/json
        #- Method=GET,POST
        #- Query=color
        #- Cookie=color,blue
        filters:
          - name: CircuitBreaker
            args:
              name: products
              statusCodes: 500
              fallbackUri: forward:/api/items/view/9/count/5
          - StripPrefix=2
          - ExampleCookie=Hello. Its a message personalized, user, GiancarloYarleque
          #- name: Example
          #  args:
          #    message: Hello, Its a message personalized
          #    cookieName: user
          #    cookieValue: GiancarloYarleque
      - id: service-items
        uri: lb://service-items
        predicates:
        - Path=/api/items/**
        filters:
          - StripPrefix=2
          - AddRequestHeader=token-request, 123456
          - AddResponseHeader=token-response, 12345678
          - AddRequestParameter=name, Giancarlo          

server:
  port: 8090

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

# How make with application.properties
#spring.cloud.gateway.routes[0].id=service-products
#spring.cloud.gateway.routes[0].uri=lb://service-products
#spring.cloud.gateway.routes[0].predicates=Path=/api/products/**
#spring.cloud.gateway.routes[0].filters=StripPrefix=2
 
#spring.cloud.gateway.routes[1].id=service-item
#spring.cloud.gateway.routes[1].uri=lb://service-item
#spring.cloud.gateway.routes[1].predicates=Path=/api/items/**
#spring.cloud.gateway.routes[1].filters=StripPrefix=2


